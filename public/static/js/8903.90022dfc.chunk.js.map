{"version":3,"file":"static/js/8903.90022dfc.chunk.js","mappings":"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","sources":["Components/Basic/PageTitle.js","Components/Management/Base.js","Helper/Evaluate/index.js","Pages/Management/Evaluate.js"],"sourcesContent":["import { Typography } from \"antd\"\nimport React from \"react\"\n\n\nconst PageTitle = (props) => {\n    return(\n        <Typography.Title style={{ fontSize: '24px'}}>\n            {props.title}\n        </Typography.Title>\n    )\n}\n\nexport default PageTitle","import React, { useState, useEffect } from 'react'\nimport { UserOutlined, IdcardOutlined, ScheduleOutlined, AppstoreOutlined, PlusOutlined, FolderViewOutlined, LogoutOutlined, DashboardOutlined, OrderedListOutlined ,NotificationOutlined, MessageOutlined, FileTextOutlined, BulbOutlined, BulbFilled } from '@ant-design/icons'\nimport { Layout, Menu, ConfigProvider, Avatar, Image, Dropdown } from 'antd'\nimport { getAuthToken, signout } from '../../Helper/Authentication'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\n\nconst { Header, Content, Footer, Sider } = Layout\nconst ManagementBase = (props) => {\n  const location = useLocation()\n\n  useEffect(() => {\n    let user = getAuthToken().user\n    if(user.role !== \"management\"){\n      return window.location.href = \"/\" \n    }\n   \n  }, [getAuthToken])\n  const [dark, setDark] = useState(true)\n  const navigate = useNavigate()\n\n  const mode = () => {\n    if(dark)\n      setDark(false)\n    else  \n      setDark(true)\n  }\n  const logout = () => {\n    signout()\n      .then((data) => {\n        if(data.redirect)\n          return navigate('/?logout=true')\n      })\n  }\n  const menuItem = [\n    {\n      key: \"/management/dashboard\",\n      icon: React.createElement(DashboardOutlined),\n      label: (<Link to=\"/management/dashboard\">Dashboard</Link>),\n    },\n    {\n      key: \"/management/timetable\",\n      icon: React.createElement(ScheduleOutlined),\n      label: (<Link to=\"/management/timetable\">Timetable</Link>),\n    },\n    {\n      key: \"/management/faculty\",\n      icon: React.createElement(UserOutlined),\n      label: (<Link to=\"/management/faculty\">Faculty</Link>),\n    },\n    {\n      key: \"/management/course\",\n      icon: React.createElement(OrderedListOutlined),\n      label: (<Link to=\"/management/course\">Courses</Link>),\n    },\n    {\n      key: \"/management/profile\",\n      icon: React.createElement(IdcardOutlined),\n      label: (<Link to=\"/management/profile\">Profile</Link>),\n    },\n    {\n      key: \"/management/announcement/view\",\n      icon: React.createElement(FolderViewOutlined),\n      label: (<Link to=\"/management/announcement/view\">Announcements</Link>),\n    },\n    {\n      key: \"message\",\n      icon: React.createElement(MessageOutlined),\n      label: (<Link to=\"/management/message/view\">Messages</Link>),\n    },\n    {\n      key: \"/management/post/new\",\n      icon: React.createElement(PlusOutlined),\n      label: (<Link to=\"/management/post/new\">Post</Link>),\n    },\n    {\n      key: \"/management/policy/view\",\n      icon: React.createElement(FolderViewOutlined),\n      label: (<Link to=\"/management/policy/view\">Policy</Link>),\n    },\n    {\n      key: \"/management/evaluate\",\n      icon: React.createElement(FolderViewOutlined),\n      label: (<Link to=\"/management/evaluate\">Evaluate</Link>),\n    },\n    {\n      key: \"Logout\",\n      icon: React.createElement(LogoutOutlined),\n      label: (<Link onClick={logout}>Logout</Link>),\n    },\n  \n  ]\n  const items = [\n    {\n      key: '2',\n      label: (\n        <Link to='/management/profile'>\n          Profile\n        </Link>\n      ),\n    },\n    {\n      key: '1',\n      label: (\n        <a href='#' onClick={() => logout()}>\n          Logout\n        </a>\n      ),\n    },\n  ]\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: '#006494',\n          borderRadius: 2,\n          colorBgContainer: '#E8F1F2',\n        },\n        \n      }}\n    >\n      <Layout>\n        <Sider\n          breakpoint=\"lg\"\n          theme={(dark ? \"dark\": \"light\")}\n          collapsedWidth=\"0\"\n          style={{ height: '100vh', background: '#13293D'}}\n        >\n          <div className=\"demo-logo-vertical\">\n            <Image src='/upesfull.png'/>\n          </div>\n          <Menu\n            theme={(dark ? \"dark\": \"light\")}\n            mode=\"inline\"\n            style={{background: '#13293D', fontSize: '16px'}}\n            defaultSelectedKeys={location.pathname}\n            defaultOpenKeys={[]}\n            items={menuItem}\n          />\n        </Sider>\n        <Layout>\n          <Header\n            style={{\n              padding: 0,\n            }}\n          >\n            <Dropdown menu={{ items, }} placement='bottom'>\n              <Avatar size=\"large\" style={{ float: 'right', margin: '10px'}} icon={<UserOutlined />} />\n            </Dropdown>\n          </Header>\n          <Content\n            style={{\n              margin: '24px 16px 0',\n            }}\n          >\n            <div\n              style={{\n                padding: 24,\n                minHeight: 360,\n              }}\n            >\n              { props.children }\n            </div>\n          </Content>\n          <Footer\n            style={{\n              textAlign: 'center',\n\n            }}\n          >\n            Debugged By Students \n          </Footer>\n        </Layout>\n        {/* <FloatButton icon={(dark ? <BulbFilled /> : <BulbOutlined />)} onClick={() => mode()} /> */}\n      </Layout>\n    </ConfigProvider>\n  )\n}\nexport default ManagementBase","import api from '../../config.json'\nimport { getToken } from '../Authentication/index'\n\n\nconst URL = api.evaluate\n\nexport const getResults = (body) => {\n  return fetch(`${URL}/result`, {\n    headers: {\n      'Accept': \"application/json\",\n      \"Content-Type\": \"application/json\",\n      'Authorization': `Bearer ${getToken()[2]}`,\n    },\n    credentials: \"include\",\n    method: \"POST\",  \n    body: JSON.stringify(body),\n  })\n    .then((res) => res.blob())\n    .catch((error) => console.log(error));\n}\n\nexport const newResult = (body) => {\n  return fetch(`${URL}/submit`, {\n      headers: {\n        'Accept': \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'Authorization': `Bearer ${getToken()[2]}`,\n      },\n      credentials: \"include\",\n      method: \"POST\",  \n      body: JSON.stringify(body),\n    })\n      .then((res) => res.json())\n      .catch((error) => console.log(error));\n\n}\nexport const getResult = (body) => {\n  return fetch(`${URL}/getresult`, {\n      headers: {\n        'Accept': \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'Authorization': `Bearer ${getToken()[2]}`,\n      },\n      credentials: \"include\",\n      method: \"POST\",  \n      body: JSON.stringify(body),\n    })\n      .then((res) => res.json())\n      .catch((error) => console.log(error));\n\n}\n\nexport const getAwardSheet = (body) => {\n  console.log(body)\n  console.log(JSON.stringify(body))\n  \n  return fetch(`${URL}/awardsheet`, {\n      headers: {\n        'Accept': \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'Authorization': `Bearer ${getToken()[2]}`,\n      },\n      credentials: \"include\",\n      method: \"POST\",  \n      body: JSON.stringify(body),\n    })\n      .then((res) => res.blob())\n      .catch((error) => console.log(error));\n      \n    \n\n}\n\nexport const getOne = (params) => {\n    return fetch(`${URL}/${params.courseId}`, {\n        headers: {\n          'Accept': \"application/json\",\n          \"Content-Type\": \"application/json\",\n          'Authorization': `Bearer ${getToken()[2]}`,\n        },\n        credentials: \"include\",\n        method: \"GET\",  \n      })\n        .then((res) => res.json())\n        .catch((error) => error.json());\n\n}\n\nexport const getAll = (type) => {\n\n    return fetch(`${URL}/all` + (type === 'management' ? '?all=true' : ''), {\n        headers: {\n          'Accept': \"application/json\",\n          \"Content-Type\": \"application/json\",\n          'Authorization': `Bearer ${getToken()[2]}`,\n        },\n        credentials: \"include\",\n        method: \"GET\",  \n      })\n        .then((res) => res.json())\n        .catch((error) => error.json());\n\n}\n\nexport const getNotEvaluated = () => {\n  return fetch(`${URL}/notevaluated`, {\n    headers: {\n      'Accept': \"application/json\",\n      \"Content-Type\": \"application/json\",\n      'Authorization': `Bearer ${getToken()[2]}`,\n    },\n    credentials: \"include\",\n    method: \"GET\",  \n  })\n    .then((res) => res.json())\n    .catch((error) => console.log(error));\n}\n\n","import React from \"react\";\nimport PageTitle from \"../../Components/Basic/PageTitle\";\nimport {\n  Form,\n  Select,\n  Space,\n  Spin,\n  Input,\n  notification,\n  Button,\n  Table,\n  Tabs,\n  Col,\n  InputNumber,\n  Row,\n  Radio\n} from \"antd\";\nimport {\n  getAll,\n  getAwardSheet,\n  getNotEvaluated,\n  getResult,\n  newResult,\n} from \"../../Helper/Evaluate/index.js\";\nimport { Upload, message } from \"antd\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport ManagementBase from \"../../Components/Management/Base.js\";\nimport { Layout } from \"antd\";\nimport { useState, useEffect } from \"react\";\n// import { sendEmail } from \"../../Helper/Email/index.js\";\nimport { Modal } from \"antd\";\n\nconst { TextArea } = Input;\n\nconst ManagementEvaluate = () => {\n  const [internalAssessmentPercentage, setInternalAssessmentPercentage] =\n    useState(30);\n  const [midsemPercentage, setMidsemPercentage] = useState(20);\n  const [endsemPercentage, setEndsemPercentage] = useState(50);\n  const [data, setData] = useState([]);\n  const [evaData, setEvaData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [select, setSelect] = useState(\"Select\");\n  const [file, setFile] = useState(null);\n  const [resultSelect, setResultSelect] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [result, setResult] = useState(null);\n  const [api, contextHolder] = notification.useNotification();\n  const [gradingPoints, setGradingPoints] = useState([\n    { grade: \"O\", min: 85, max: 100, defaultValue: 0 },\n    { grade: \"A+\", min: 75, max: 84, defaultValue: 1 },\n    { grade: \"A\", min: 65, max: 74, defaultValue: 2 },\n    { grade: \"B+\", min: 55, max: 64, defaultValue: 3 },\n    { grade: \"B\", min: 45, max: 54, defaultValue: 4 },\n    { grade: \"C\", min: 40, max: 44, defaultValue: 5 },\n    { grade: \"F\", min: 0, max: 39, defaultValue: 6 },\n  ]);\n  const [faculty, setFaculty] = useState(null);\n\n  const openNotification = ({ type, message }) => {\n    api[type]({\n      message: message,\n    });\n  };\n  const dataSource = [];\n  useEffect(() => {\n    document.title = \"Evaluate | SoCIS\";\n    getAll(\"management\")\n      .then((res) => {\n        let array = [];\n        res.map((item) => {\n          array.push({\n            name: item.evaluator.firstName + \" \" + item.evaluator.lastName,\n            email: item.evaluator.email,\n            batchName: `${item.programName} ${item.batchName} SEM: ${item.semester}`,\n            subjectName: `${item.subjectName} (${item.subjectCode})`,\n            reportingManager: `${\n              item.evaluator.reportingManager\n                ? item.evaluator.reportingManager.email\n                : \"No Reporting Manager\"\n            }`,\n          });\n        });\n        setEvaData(array);\n      })\n      .catch((error) => {\n        return openNotification({ type: \"error\", message: \"Error Occurred!\" });\n      });\n\n    getAll(\"faculty\")\n      .then((res) => {\n        if (res.error)\n          return openNotification({\n            type: \"error\",\n            message: \"Error Occurred!\",\n          });\n\n        if (res.length === 0)\n          return openNotification({\n            type: \"info\",\n            message: \"No Evaluations Found!\",\n          });\n        setData(res);\n\n        let array = [];\n        res.map((item) => {\n          array.push({\n            value: `${item._id}`,\n            label: `${item.programName}-${item.semester}-${\n              item.batchName\n            } Subject:${item.subjectName} (${\n              item.subjectCode\n            }) Result Status: ${item.uploaded ? \"OK\" : \"Not OK\"}`,\n          });\n        });\n        setOptions(array);\n        setLoading(false);\n      })\n      .catch((error) => {\n        return openNotification({ type: \"error\", message: \"Error Occurred!\" });\n      });\n  }, [setData, setOptions, setResultSelect, setFile, setResult, setFaculty]);\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n    },\n    {\n      title: \"Roll Number\",\n      dataIndex: \"rollnumber\",\n      key: \"rollnumber\",\n    },\n    {\n      title: \"SAPID\",\n      dataIndex: \"sapId\",\n      key: \"sapId\",\n    },\n    {\n      title: \"Internal Marks\",\n      dataIndex: \"internal\",\n      key: \"intermal\",\n    },\n    {\n      title: \"Mid Sem Marks\",\n      dataIndex: \"midsem\",\n      key: \"midsem\",\n    },\n    {\n      title: \"End Sem Marks\",\n      dataIndex: \"endsem\",\n      key: \"endsem\",\n    },\n    {\n      title: \"Final Marks\",\n      dataIndex: \"finalmarks\",\n      key: \"finalmarks\",\n    },\n    {\n      title: \"Grade\",\n      dataIndex: \"grade\",\n      dataIndex: \"grade\",\n    },\n  ];\n\n  const columns2 = [\n    {\n      title: \"Faculty Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n    },\n    {\n      title: \"Batch Name\",\n      dataIndex: \"batchName\",\n      key: \"batchName\",\n    },\n    {\n      title: \"Course Name\",\n      dataIndex: \"subjectName\",\n      key: \"subjectName\",\n    },\n    {\n      title: \"Faculty Email\",\n      dataIndex: \"email\",\n      key: \"email\",\n    },\n    {\n      title: \"Cluster Head Email\",\n      dataIndex: \"reportingManager\",\n      key: \"reportingManager\",\n    },\n    {\n      title: \"Send Email\",\n      dataIndex: \"send\",\n      key: \"send\",\n      render: (text, record) => (\n        <Button type=\"primary\" onClick={() => handleSend(record)}>\n          Send\n        </Button>\n      ),\n    },\n  ];\n  const [template, setTemplate] = useState(\"\");\n\n    const handleSend = (record) => {\n      // Handle send button click event\n      console.log(\"Send button clicked for record:\", record);\n      const { name, email, batchName, subjectName } = record;\n      const template = `\n        Dear ${name},\\n\n        I hope this message finds you well.\\n\n\n        This is a friendly reminder regarding the pending task of generating the award sheet for the ${batchName} batch in ${subjectName} course.\\n\n\n        Your cooperation in completing this task is crucial to ensure timely completion of the evaluation process.\\n\n\n        Please generate the award sheet at your earliest convenience and ensure its submission.\\n\n\n        Thank you for your attention to this matter.\n      `;\n\n      Modal.confirm({\n        title: \"Edit Email Template\",\n        content: (\n          <TextArea\n            rows={10}\n            defaultValue={template}\n            onChange={(e) => setTemplate(e.target.value)}\n          />\n        ),\n        okText: \"Send\",\n        cancelText: \"Cancel\",\n        style: { height: \"1000px\" },\n        width: \"300\",\n        height: \"400\",\n        \n        // Set the desired width here\n        // onOk: () => {\n        //   // Send email\n        //   sendEmail({ email, template })\n        //     .then((data) => {\n        //       // Show success notification\n        //       openNotification({\n        //         type: 'success',\n        //         message: 'Email sent successfully',\n        //       });\n        //     })\n        //     .catch((error) => {\n        //       // Show error notification\n        //       openNotification({\n        //         type: 'error',\n        //         message: 'Error while sending email',\n        //       });\n        //     });\n        // },\n      });\n    };\n  const handleGradingPointChange = (index, key, value) => {\n    const updatedGradingPoints = [...gradingPoints];\n    updatedGradingPoints[index][key] = value;\n    setGradingPoints(updatedGradingPoints);\n  };\n\n  const handleInternalAssessmentChange = (value) => {\n    if (value + midsemPercentage + endsemPercentage <= 100) {\n      setInternalAssessmentPercentage(value);\n    } else {\n      openNotification({\n        type: \"warning\",\n        message: \"Total percentage exceeds 100\",\n      });\n    }\n  };\n\n  const handleMidsemChange = (value) => {\n    if (internalAssessmentPercentage + value + endsemPercentage <= 100) {\n      setMidsemPercentage(value);\n    } else {\n      openNotification({\n        type: \"warning\",\n        message: \"Total percentage exceeds 100\",\n      });\n    }\n  };\n\n  const handleEndsemChange = (value) => {\n    if (internalAssessmentPercentage + midsemPercentage + value <= 100) {\n      setEndsemPercentage(value);\n    } else {\n      openNotification({\n        type: \"warning\",\n        message: \"Total percentage exceeds 100\",\n      });\n    }\n  };\n\n  const onSelectChange = (e) => {\n    console.log(e);\n    setResult(null);\n    setResultSelect(null);\n    let obj = data.find((o) => o._id === e);\n    if (obj.uploaded) {\n      getResult({ evaluationId: e })\n        .then((data) => {\n          data.map((item) => {\n            dataSource.push({\n              key: item._id,\n              name: item.name,\n              rollnumber: item.rollNumber,\n              sapId: item.sapId,\n              internal: item.grades[0].internalMarks,\n              midsem: item.grades[0].midSemMarks,\n              endsem: item.grades[0].endSemMarks,\n              grade: item.grades[0].grade,\n              finalmarks: item.grades[0].finalMarks,\n              evaluationId: item.grades[0].evaluation,\n            });\n          });\n          setResult(dataSource);\n          console.log(data[0].grades[0].evaluation);\n          console.log(dataSource);\n        })\n        .catch((err) => {\n          return openNotification({\n            type: \"error\",\n            message: \"An Error Occurred!\",\n          });\n        });\n    } else {\n      setResultSelect(e);\n    }\n  };\n  const downloadResult = (evaluationId) => {\n    console.log(\"Downloading result for evaluationId:\", evaluationId);\n    getAwardSheet({ evaluationId: evaluationId })\n      .then((data) => {\n        const url = window.URL.createObjectURL(data);\n        const a = document.createElement(\"a\");\n        a.style.display = \"none\";\n        a.href = url;\n        a.download = `${evaluationId}.pdf`;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n      })\n      .catch((error) => {\n        console.error(\"Error while downloading result:\", error);\n        // Handle the error accordingly, such as showing a notification\n        // show notification\n\n        openNotification({\n          type: \"error\",\n          message: \"Error while downloading result\",\n        });\n      });\n  };\n\n  const submitResult = (e) => {\n    console.log(e);\n    e.preventDefault();\n    if (file === null) {\n      return openNotification({\n        type: \"warning\",\n        message: \"Please Select A File First\",\n      });\n    }\n\n    let obj = data.find((o) => o._id === resultSelect);\n    newResult({\n      file: file,\n      value: resultSelect,\n      subjectName: obj.subjectName,\n      subjectCode: obj.subjectCode,\n      semester: obj.semester,\n      parameters: {\n        grade: gradingPoints,\n        internalAssessmentPercentage: internalAssessmentPercentage,\n        midsemPercentage: midsemPercentage,\n        endsemPercentage: endsemPercentage,\n      },\n    })\n      .then((res) => {\n        openNotification({\n          type: \"success\",\n          message: \"Result Uploaded! You Would Be Refreshed!\",\n        });\n        setTimeout(() => {\n          window.location.reload();\n        }, 3000);\n      })\n      .catch((err) => {\n        return openNotification({ type: \"error\", message: \"Error Occurred!\" });\n      });\n  };\n const handleFileUpload = (file) => {\n   let name = file.name.split(\".\");\n   if (name[1] !== \"xlsx\") {\n     setTimeout(() => {\n       window.location.reload();\n     }, 2000);\n     openNotification({\n       type: \"warning\",\n       message: \"Only .XLSX File Are Allowed\",\n     });\n     return false; // Prevent file upload if not .xlsx\n   }\n\n   var reader = new FileReader();\n   reader.readAsDataURL(file);\n   reader.onload = () => {\n     setFile(reader.result);\n   };\n   return false; // Return false to prevent default upload behavior\n };\n\n const fileChange = (e) => {\n   if (e && e.target && e.target.files && e.target.files.length > 0) {\n     const f = e.target.files[0];\n     let name = f.name.split(\".\");\n     if (name[1] !== \"xlsx\") {\n       setTimeout(() => {\n         window.location.reload();\n       }, 2000);\n       return openNotification({\n         type: \"warning\",\n         message: \"Only .XLSX File Are Allowed\",\n       });\n     }\n     var reader = new FileReader();\n     reader.readAsDataURL(f);\n     reader.onload = () => {\n       setFile(reader.result);\n     };\n   } else {\n     // Handle the case where the event or file information is not available\n     console.error(\"File information not available\");\n     openNotification({\n       type: \"error\",\n       message: \"File information not available\",\n     });\n   }\n };\n\n\n  const tabs = [\n    {\n      key: \"1\",\n      label: \"Evaluate\",\n      children: (\n        <div>\n          {loading ? (\n            <Spin />\n          ) : (\n            <Form onSubmitCapture={() => null}>\n              <Form.Item\n                style={{\n                  width: \"100%\",\n                }}\n                required={true}\n                label=\"Select The Batch And Course:\"\n              >\n                {/* <Radio.Group onChange={onSelectChange} value={select}>\n                  {options.map((option) => (\n                    <Radio key={option.value} value={option.value} style={{ display: \"block\", marginBottom: 10 }}>\n                      {option.label}\n                    </Radio>\n                  ))}\n                </Radio.Group> */}\n                <Select\n                  defaultValue={select}\n                  options={options}\n                  onChange={onSelectChange}\n                  showSearch\n                ></Select>\n              </Form.Item>\n            </Form>\n          )}\n          {!result ? (\n            \"\"\n          ) : (\n            <div>\n              <Table\n                loading={!result ? true : false}\n                dataSource={result}\n                columns={columns}\n              />\n              {/* create a button to downlaod result */}\n              <div style={{ padding: \"10px\", textAlign: \"right\" }}>\n                <Button\n                  type=\"primary\"\n                  onClick={() => downloadResult(result[0].evaluationId)}\n                  // onClick={console.log(result[0].evaluationId)}\n                >\n                  Download Result\n                </Button>\n              </div>\n            </div>\n          )}\n          {!resultSelect ? (\n            \"\"\n          ) : (\n            <Form onSubmit={submitResult}>\n             \n<Upload.Dragger\n  name=\"file\"\n  multiple={false}\n  beforeUpload={(file) => handleFileUpload(file)}\n  showUploadList={false}\n>\n  <p className=\"ant-upload-drag-icon\">\n    <InboxOutlined />\n  </p>\n  <p className=\"ant-upload-text\">\n    Click or drag Excel file to this area to upload\n  </p>\n</Upload.Dragger>\n\n              {/* Create a form with dropdown to choose the grading system 1)grading ratio between midsem, endsem and internal assesment. 2)grading points */}\n\n              <Form.Item label=\"Grading System\">\n                <div>Assessment Ratio:</div>\n                <Row gutter={16}>\n                  <Col span={8}>\n                    <Form.Item label=\"Internal Assessment (%):\">\n                      <InputNumber\n                        min={0}\n                        max={100}\n                        defaultValue={internalAssessmentPercentage}\n                        onChange={handleInternalAssessmentChange}\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col span={8}>\n                    <Form.Item label=\"Midsem (%):\">\n                      <InputNumber\n                        min={0}\n                        max={100}\n                        defaultValue={midsemPercentage}\n                        onChange={handleMidsemChange}\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col span={8}>\n                    <Form.Item label=\"Endsem (%):\">\n                      <InputNumber\n                        min={0}\n                        max={100}\n                        defaultValue={endsemPercentage}\n                        onChange={handleEndsemChange}\n                      />\n                    </Form.Item>\n                  </Col>\n                </Row>\n\n                <div>Grading Points:</div>\n                {gradingPoints.map((item, index) => (\n                  <Row\n                    key={index}\n                    style={{\n                      display: \"flex\",\n                    }}\n                  >\n                    <Col span={8} style={{ width: \"100%\" }}>\n                      <span>{item.grade}:</span>\n                    </Col>\n                    <Col\n                      span={8}\n                      style={{ paddingLeft: \"10px\", paddingRight: \"5px\" }}\n                    >\n                      <span>Min Limit:</span>\n                      <InputNumber\n                        min={0}\n                        max={100}\n                        defaultValue={item.min}\n                        onChange={(value) =>\n                          handleGradingPointChange(index, \"min\", value)\n                        }\n                      />\n                    </Col>\n                    <Col span={8}>\n                      <span>Max Limit:</span>\n                      <InputNumber\n                        min={0}\n                        max={100}\n                        defaultValue={item.max}\n                        onChange={(value) =>\n                          handleGradingPointChange(index, \"max\", value)\n                        }\n                      />\n                    </Col>\n                  </Row>\n                ))}\n              </Form.Item>\n              <Form.Item>\n                <Button htmlType=\"submit\" type=\"primary\" onClick={submitResult}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          )}\n        </div>\n      ),\n    },\n    {\n      key: \"2\",\n      label: \"See Pending Evaluations\",\n      children: (\n        <div style={{ maxHeight: \"400px\" }}>\n          <h4>Faculty who have not generated award sheet</h4>{\" \"}\n          <Table\n            dataSource={evaData}\n            columns={columns2}\n            pagination={false}\n            scroll={{ y: 300 }}\n          />\n          {/* add button for send all */}\n          <div style={{ padding: \"10px\", textAlign: \"right\" }}>\n            <Button type=\"primary\" style={{}}>\n              Send All\n            </Button>\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <ManagementBase>\n      {contextHolder}\n      <PageTitle title=\"Evaluation\" />\n      <Space />\n      <Tabs defaultActiveKey=\"2\" items={tabs} />\n    </ManagementBase>\n  );\n};\n\nexport default ManagementEvaluate;\n"],"names":["props","_jsx","Typography","Title","style","fontSize","children","title","Header","Layout","Content","Footer","Sider","location","useLocation","useEffect","getAuthToken","user","role","window","href","_useState","useState","_useState2","_slicedToArray","dark","navigate","useNavigate","logout","signout","then","data","redirect","menuItem","key","icon","React","DashboardOutlined","label","Link","to","ScheduleOutlined","UserOutlined","OrderedListOutlined","IdcardOutlined","FolderViewOutlined","MessageOutlined","PlusOutlined","LogoutOutlined","onClick","items","ConfigProvider","theme","token","colorPrimary","borderRadius","colorBgContainer","_jsxs","breakpoint","collapsedWidth","height","background","className","Image","src","Menu","mode","defaultSelectedKeys","pathname","defaultOpenKeys","padding","Dropdown","menu","placement","Avatar","size","float","margin","minHeight","textAlign","URL","api","getResults","body","fetch","concat","headers","getToken","credentials","method","JSON","stringify","res","blob","catch","error","console","log","newResult","json","getResult","getAwardSheet","getAll","type","TextArea","Input","internalAssessmentPercentage","setInternalAssessmentPercentage","_useState3","_useState4","midsemPercentage","setMidsemPercentage","_useState5","_useState6","endsemPercentage","setEndsemPercentage","_useState7","_useState8","setData","_useState9","_useState10","evaData","setEvaData","_useState11","_useState12","loading","setLoading","_useState13","_useState14","select","_useState15","_useState16","file","setFile","_useState17","_useState18","resultSelect","setResultSelect","_useState19","_useState20","options","setOptions","_useState21","_useState22","result","setResult","_notification$useNoti","notification","useNotification","_notification$useNoti2","contextHolder","_useState23","grade","min","max","defaultValue","_useState24","gradingPoints","setGradingPoints","_useState25","_useState26","setFaculty","openNotification","_ref","message","dataSource","document","array","map","item","push","name","evaluator","firstName","lastName","email","batchName","programName","semester","subjectName","subjectCode","reportingManager","length","value","_id","uploaded","columns","dataIndex","_defineProperty","columns2","render","text","record","Button","handleSend","_useState27","_useState28","setTemplate","template","Modal","confirm","content","rows","onChange","e","target","okText","cancelText","width","handleGradingPointChange","index","updatedGradingPoints","_toConsumableArray","submitResult","preventDefault","obj","find","o","parameters","setTimeout","reload","err","tabs","Spin","Form","onSubmitCapture","Item","required","Select","evaluationId","rollnumber","rollNumber","sapId","internal","grades","internalMarks","midsem","midSemMarks","endsem","endSemMarks","finalmarks","finalMarks","evaluation","showSearch","Table","url","createObjectURL","a","createElement","display","download","appendChild","click","revokeObjectURL","onSubmit","Upload","Dragger","multiple","beforeUpload","split","reader","FileReader","readAsDataURL","onload","handleFileUpload","showUploadList","InboxOutlined","Row","gutter","Col","span","InputNumber","paddingLeft","paddingRight","htmlType","maxHeight","pagination","scroll","y","ManagementBase","PageTitle","Space","Tabs","defaultActiveKey"],"sourceRoot":""}